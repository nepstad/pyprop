#Copy this file to Makefile.platform, and modify it
#To suit your platform specific needs.
#Compiler options set here will be included by makefiles in all subdirs

#Use these flags for speed
CXXFLAGS       := $(CXXFLAGS) $(OPTIMIZE_FLAGS) -Wall -O3 -funroll-loops 
#CXXFLAGS       := $(CXXFLAGS) -DBZ_DEBUG -g -Wall
CPPFLAGS       := $(CPPFLAGS) -DPYPROP_USE_BLAS 
LDFLAGS        := $(LDFLAGS) 

#Use these flags for debugging
#CXXFLAGS       := $(CXXFLAGS) -Wall -O0 -g
#CPPFLAGS       := $(CPPFLAGS) -DLONGSIZE_32BIT -DBZ_DEBUG -DPYPROP_USE_BLAS 

MPICXX         := mpicxx
BOOST_LIBS     := -lboost_python
#PYSTE_FLAGS    := --gccxml-path="gccxml --gccxml-compiler g++-3.4"
PYSTE_INCLUDE  := -I/opt/openmpi/include
LAPACK_LIBS = -llapack -lblas

PYPROP_USE_ARPACK  := 1
PYPROP_USE_PIRAM   := 1
PYPROP_USE_EXPOKIT := 1
PYPROP_USE_ODE     := 1


ARPACK_LIB        = /opt/ARPACK/libparpack.a /opt/ARPACK/libarpack.a -lmpi_f77 -lgfortran

FC             := gfortran
FORTRAN_FLAGS  := -ffree-form -implicit-none -ffree-line-length-none -fPIC
FORTRAN_LIBS   := -lg2c -lgfortran


#pyprop CPPFLAGS:
# -DSINGLEPROC  
#    compile for single processor only. No MPI calls are made when this flag
#    is set.
#
# -DLONGSIZE_32BIT
#    compile for 32bit processor. currently this only affects the timer
#    hltimer.h
#
# -DPYPROP_USE_BLAS
#  	 use blas routines for matrix-vector, matrix-matrix, and 
#  	 vector-vector operations.
#  	 see core/utility/blitzblas.cpp for details
#
#
# PYPROP_USE_ARPACK
#    set to 1 to compile ARPACK wrapper for pyprop
#    ARPACK_LIB must then also be set to point to libarpack.a compiled with -fPIC options on platforms that require
#    position independent code for shared libraries
