[Representation]
rank = 2
type = core.CombinedRepresentation_2
representation0 = "RadialRepresentation"
representation1 = "AngularRepresentation"

[RadialRepresentation]
rank = 1
#type = core.CartesianRepresentation_1
#rank0 = [-37.5, 37.5, 512]
type = core.CustomGridRepresentation
function = GetGridLinear
xmin = 0
xmax = 100
count = 500
include_left_boundary = False
include_right_boundary = True

[AngularRepresentation]
type = core.ReducedSphericalHarmonicRepresentation
rank = 1
maxl = 4

[InitialCondition]
type = InitialConditionType.Function
function = lambda conf, x: x[0] * exp(- abs(x[0]))

[Potential]
type = PotentialType.Static
storage_model = StaticStorageModel.StorageValue
classname = "CoulombPotential"
charge = -1

[AngularKineticEnergy]
type = PotentialType.Static
storage_model = StaticStorageModel.StorageValue
classname = "pyprop.core.ReducedAngularKineticEnergyPotential_2"
radial_rank = 0
l_rank = 1
mass = 1



[Propagation]
potential_evaluation = ["Potential"] 
#propagator = CombinedPropagator
base_propagator = CombinedPropagator
propagator = CayleyPropagator
krylov_basis_size = 40
preconditioner = "RadialPreconditioner"
#preconditioner = None
propagator0 = "RadialPropagator"
propagator1 = "AngularPropagator"
timestep = -0.01j
duration = 30
renormalization = True
silent = False

[RadialPropagator]
#propagator = CartesianRadialPropagator
#force_origin_zero = True
propagator = CrankNicholsonPropagator
difference_order = 3
mass = 1.0

[AngularPropagator]
propagator = ReducedSphericalPropagator
mass = 1.0
radial_rank = 0

[RadialPreconditioner]
type = FiniteDifferencePreconditioner
rank = 0
potential_evaluation = ["Potential", "AngularKineticEnergy"]
