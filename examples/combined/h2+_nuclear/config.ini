[Representation]
rank = 3
type = core.CombinedRepresentation_3
representation0 = "NuclearRadialRepresentation"
representation1 = "ElectronicRadialRepresentation"
representation2 = "ElectronicAngularRepresentation"

[NuclearRadialRepresentation]
type = core.CartesianRepresentation_1
rank = 1
rank0 = [0.1, 15, 256]

[ElectronicRadialRepresentation]
type = core.CartesianRepresentation_1
rank = 1
rank0 = [-120, 120, 1024]

[ElectronicAngularRepresentation]
type = core.ReducedSphericalHarmonicRepresentation
rank = 1
maxl = 127

[InitialCondition]
type = InitialConditionType.Function
function = lambda conf, x: x[1] * exp(- abs(x[1])) * exp(- (x[0] - 2.2)**2)

[Potential]
type = PotentialType.Static
classname = "H2pPotential"
charge = -1
softing = 0.01

[Propagation]
potential_evaluation = ["Potential"] 
propagator = CombinedPropagator
propagator0 = "NuclearRadialPropagator"
propagator1 = "ElectronicRadialPropagator"
propagator2 = "ElectronicAngularPropagator"
timestep = -0.01j
duration = 5
renormalization = True
silent = False

[Arpack]
krylov_basis_size = 10
krylov_tolerance = 0
krylov_eigenvalue_count = 2
krylov_max_iteration_count = 5000
krylov_use_random_start = False

[NuclearRadialPropagator]
propagator = CartesianRadialPropagator
mass = 1836. / 2.
force_origin_zero = False

[ElectronicRadialPropagator]
propagator = CartesianRadialPropagator
mass = 1.0

[ElectronicAngularPropagator]
propagator = ReducedSphericalPropagator
mass = 1.0
radial_rank = 1

[Distribution]
proc_array_rank = 2
initial_distribution = array([1,2], dtype=int)
