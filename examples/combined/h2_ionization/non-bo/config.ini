[Representation]
rank = 3
type = core.CombinedRepresentation_3
representation0 = "NuclearRepresentation"
representation1 = "ElectronRepresentation"
representation2 = "ElectronRepresentation"

[NuclearRepresentation]
type = core.CartesianRepresentation_1
rank = 1
rank0 = [0.5, 20, 64]

[ElectronRepresentation]
type = core.CustomGridRepresentation
rank = 1
function = GetBidirectionalGridExponentialLinear
gamma = 3
inner_count = 30
inner_boundary = 40
outer_boundary = 40


[Potential]
type = PotentialType.Static
storage_model = StaticStorageModel.StorageValue
classname = "H2Potential"
nuclear_softing = 1.
repulsion_softing = 1.

[InitialCondition]
type = InitialConditionType.Function
function = lambda conf, x: exp(-(x[0]-2.2)**2)*(x[1] - x[2]) * exp(- abs(x[1]) - abs(x[2])) 

[Propagation]
potential_evaluation = ["Potential"] 
propagator = CombinedPropagator
#propagator = PamPropagator
#base_propagator = CombinedPropagator
krylov_basis_size = 30
propagator0 = "NuclearPropagator"
propagator1 = "ElectronPropagator"
propagator2 = "ElectronPropagator"
timestep = -0.02j
duration = 15
renormalization = True
silent = False

[NuclearPropagator]
propagator = CrankNicholsonPropagator
difference_order = 5
mass = 1000
force_origin_zero = False

[ElectronPropagator]
propagator = CrankNicholsonPropagator
difference_order = 13
mass = 1

[Arpack]
krylov_basis_size = 40
krylov_eigenvalue_count = 2
krylov_tolerance = 0
krylov_max_iteration_count = 1000
krylov_use_random_start = True
counter_on = True


[Distribution]
proc_rank = 1
initial_distribution = array([1], dtype=int)

