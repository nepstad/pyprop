[Representation]
rank = 2
type = core.CombinedRepresentation_2
representation0 = "SubRadialRepresentation"
representation1 = "SubAngularRepresentation"
representation2 = "SubRepresentation"
representation3 = "SubRepresentation"

[SubRadialRepresentation]
type = core.OrthoPolRadialRepresentation
rank = 1
n = 80
scaling = 5
polynomial_type = PolynomialType.LaguerrePolynomial
hyperspherical_rank = 2

[SubRadialRepresentationTransformed]
type = core.TransformedRadialRepresentation
rank = 1
n = 40
transform_scaling = 1
transform_type = 3

[SubAngularRepresentation]
type = core.CartesianRepresentation_1
rank0 = [0, 2*pi, 8]
rank = 1

[SubRepresentation]
#type = core.OrthoPolRadialRepresentation
type = core.CartesianRepresentation_1
rank0 = [-10, 10, 128]
rank = 1
n = 80
scaling = 1
polynomial_type = PolynomialType.HermitePolynomial
hyperspherical_rank = 1

[InitialCondition]
type = InitialConditionType.Function
function = lambda conf, x: exp(-sum(array(x)**2))

[Potential]
type = PotentialType.Static
classname = "QDotPotential"
omega = 1
separation = 0
interaction = 0
softing = 0.001

[Propagation]
potential_evaluation = ["Potential"] 
propagator = CombinedPropagator
propagator0 = "SubRadialPropagator"
propagator1 = "SubAngularPropagator"
propagator2 = "SubPropagator"
propagator3 = "SubPropagator"
timestep = -0.01j
duration = 10
renormalization = True

[Arpack]
krylov_basis_size = 100
krylov_tolerance = 0
krylov_eigenvalue_count = 20
krylov_max_iteration_count = 500
krylov_use_random_start = True

[SubRadialPropagator]
propagator = OrthoPolRadialPropagator
mass = 1.0

[SubAngularPropagator]
propagator = PolarPropagator
radial_rank = 0
mass = 1.0

[SubPropagator]
#propagator = OrthoPolRadialPropagator
propagator = CartesianRadialPropagator
mass = 1.0

[Distribution]
proc_array_rank = 1
initial_distribution = array([2], dtype=int)


