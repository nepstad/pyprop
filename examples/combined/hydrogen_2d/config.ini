[Representation]
rank = 2
type = core.CombinedRepresentation_2
representation0 = "CartesianRepresentation1"
representation1 = "CartesianRepresentation1"

[CartesianRepresentation1]
type = core.CartesianRepresentation_1
rank = 1
rank0 = [-10, 10, 128]

[CartesianRepresentation2]
type = core.CartesianRepresentation_1
rank = 1
rank0 = [-10, 10, 128]

[ElectronRepresentation2]
type = core.CustomGridRepresentation
rank = 1
#function = GetBidirectionalGridExponentialLinear
function = GetGridLinear
quadrature = "simpson"
xmin = -30
xmax = 30
count = 101
gamma = 0.5
inner_boundary = 30
outer_boundary = 30
inner_count = 30
include_left_boundary = True
include_right_boundary = True

[Potential]
type = PotentialType.Static
storage_model = StaticStorageModel.StorageValue
classname = "HydrogenPotential2D"
softing = 0.8

[HarmonicOscillatorPotential]
type = PotentialType.Static
storage_model = StaticStorageModel.StorageValue
classname = "HarmonicOscillatorPotential"
strength = 1.0

[LaserPotential]
type = PotentialType.Dynamic
classname = "LaserPotential"
field_strength = 0.1
frequency = 0.3
duration = 10
peak_time = 10
phase = 0
polarization_rank = 0

[NonDipolePotential]
type = PotentialType.Dynamic
classname = "NonDipolePotential"
field_strength = 0.5
frequency = 1.0
pulse_start_time = 0
duration = 10
phase = 0
light_speed = 1/137.0
polarization_rank = 0
nondipole_rank = 1

[InitialCondition]
type = InitialConditionType.File
#function = lambda conf, x: (x[0] + x[1]) * exp(- abs(x[0]-5) - abs(x[1]-5)) 
#function = lambda conf, x: (x[0]) * exp(- abs(x[0]-5) ) 
format = WavefunctionFileFormat.HDF
filename = "groundstate_fourier.h5"
dataset = "/wavefunction"

[Propagation]
#potential_evaluation = ["Potential", "LaserPotential"]
potential_evaluation = ["Potential"]
#potential_evaluation = ["HarmonicOscillatorPotential", "LaserPotential"]
propagator = CombinedPropagator
propagator0 = "FourierPropagator1"
propagator1 = "FourierPropagator2"
timestep = 0.01
duration = 10
renormalization = False
silent = False
krylov_basis_size = 10

[FourierPropagator1]
propagator = CartesianRadialPropagator
force_origin_zero = False
mass = 1.0

[FourierPropagator2]
propagator = CartesianRadialPropagator
fourier_potentials = ["NonDipolePotential"]
force_origin_zero = False
mass = 1.0

[ElectronPropagator]
propagator = CrankNicholsonPropagator
difference_order = 3
mass = 1

[Arpack]
krylov_basis_size = 15
krylov_eigenvalue_count = 2
krylov_tolerance = 0
krylov_max_iteration_count = 1000
krylov_use_random_start = True
counter_on = True

[Distribution]
proc_rank = 1
initial_distribution = array([1], dtype=int)

