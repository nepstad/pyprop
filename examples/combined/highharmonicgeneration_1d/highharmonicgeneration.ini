[Representation]
rank = 1
type = core.CombinedRepresentation_1
representation0 = "BSplineRepresentation"
#representation0 = "FiniteDifferenceRepresentation"

[BSplineRepresentation]
type = core.BSplineRepresentation
init_function = InitBSpline
xmin = -1500.0
xmax = 1500.0
xsize = 1000
bpstype = 'linear'
continuity = 'zero'
order = 5
quad_order_additional = 0
projection_algorithm = 0
lapack_algorithm = 1

[FiniteDifferenceRepresentation]
type = core.CustomGridRepresentation
rank = 1
function = GetGridLinear
xmin = -1500
xmax = 1500
count = 3000
include_left_boundary = True
include_right_boundary = True

[InitialCondition]
type = InitialConditionType.Function
function = lambda conf, x: exp(-x[0]**2)

[Propagation]
potential_evaluation = []
#potential_evaluation = ["DynamicPotential"]
#potential_evaluation = ["DynamicPotential", "AbsorbingPotential"]
#potential_evaluation = ["ModelAtomPotential"]
#potential_evaluation = ["ModelAtomPotential","DynamicPotential","AbsorbingPotential"]
propagator = CombinedPropagator
propagator0 = "BSplinePropagator"
#propagator0 = "FiniteDifferencePropagator"
timestep = 0.005
duration = 50 * cycletime_from_wavelength(300)
#duration = 40
renormalization = False
silent = False

[BSplinePropagator]
propagator = BSplinePropagator
rank = 0
mass = 1.0
potential = "ModelAtomPotential"

[FiniteDifferencePropagator]
propagator = CrankNicholsonPropagator
difference_order = 7
mass = 1

[DynamicPotential]
type = PotentialType.Dynamic
classname = "LaserPotential"
pulse_duration = 50 * cycletime_from_wavelength(300)
frequency = freq_from_wavelength(300)
amplitude = field_from_intensity(3.2e15)

[ModelAtomPotential]
type = PotentialType.RankOne
potential_rank = 0
classname = "ModelAtomPotential"
charge = -1.0
soft_param = 1.0

[DiffPotential]
type = PotentialType.Static
#potential_rank = 0
storage_model = StaticStorageModel.StorageValue
classname = "ModelAtomPotentialDiff"
charge = -1.0
soft_param = 1.0

[StarkPotential]
type = PotentialType.Dynamic
classname = "StarkPotential"
field_strength = 1.0

[AbsorbingPotential]
type = PotentialType.Static
storage_model = StaticStorageModel.StorageExpValue
classname = "CombinedAbsorber"
absorbers = ["RadialAbsorber"]

[RadialAbsorber]
type = AbsorbingBoundary
absorb_left = True
absorb_right = True
rank = 0
width = 50
