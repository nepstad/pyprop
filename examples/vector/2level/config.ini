[Representation]
type = core.VectorRepresentation
rank = 1
vector_size = 50

[InitialCondition]
type = InitialConditionType.Function
function = lambda conf, x: (x[0] == 0) * 1.0

[Potential]
type = PotentialType.Matrix
matrix_type = MatrixType.Sparse
#filename = 'matrix_elements.dat.h5'
matrix_function = GetSparseMatrix
dataset = '/doubledot/matrixelements'
#time_function = lambda conf, t: 0
time_function = lambda conf, t: conf.e0 * cos(conf.omega * t) * sin(pi*t/conf.fieldtime)**2
#time_function = lambda conf, t: conf.e0 * cos(conf.omega * t)
duration = 4266.
omega = 0.08248
e0 = 0.0004 * 3.44336611701300
fieldtime = 4266.
#matrix_function = GetMatrix

[PotentialD]
type = PotentialType.Matrix
matrix_type = MatrixType.Diagonal
time_function = lambda conf, t: 1
matrix_function = GetDiagonalElements

[Propagation]
base_propagator = VectorPropagator
propagator = OdePropagator
potential_evaluation = ["Potential", "PotentialD"]
timestep = 1.0
duration = 4266
renormalization = False
relative_error = 1e-12
absolute_error = 1e-12

[Distribution]
proc_array_rank = 1
initial_distribution = array([0])
