[Representation]
type = core.VectorRepresentation
rank = 1
vector_size = 50

[InitialCondition]
type = InitialConditionType.Function
function = lambda conf, x: (x[0] == 0) * 1.0

[FinalState]
type = "vector"
states = [2]
population = [1]

[Krotov]
control_functions = ["ElectricControlX", "ElectricControlY"]
penalty_list = []
control_cutoff = inf
energy_penalty = 45.0
max_iterations = 15
yield_requirement = 1.0
debug = False
update_backwards = False

[ZhuRabitz]
control_functions = ["ElectricControlX", "ElectricControlY"]
h0 = ["Potential1D"]
penalty_list = []
control_cutoff = inf
energy_penalty = 45.0
max_iterations = 15
yield_requirement = 1.0
debug = False
update_backwards = True

[Degani]
control_functions = ["ElectricControlX", "ElectricControlY"]
h0 = ["Potential1D"]
control_cutoff = inf
energy_penalty = 45.0
max_iterations = 15
yield_requirement = 1.0
debug = False
update_backwards = True

[ElectricControlX]
type = PotentialType.Matrix
matrix_type = MatrixType.Dense
filename = 'input/matrixelements_complex.h5'
dataset = '/electricfield/xpolarized'
time_function = lambda conf, t: conf.strength * conf.scaling
scaling = 3.44336611701300 
strength = 0.01

[ElectricControlY]
type = PotentialType.Matrix
matrix_type = MatrixType.Dense
filename = 'input/matrixelements_complex.h5'
dataset = '/electricfield/ypolarized'
time_function = lambda conf, t: conf.strength * conf.scaling
scaling = 3.44336611701300
strength = 0.015

[ZeemanControl]
type = PotentialType.Matrix
matrix_type = MatrixType.Dense
filename = 'input/matrixelements_zeeman.h5'
dataset = '/zeeman'
time_function = lambda conf, t: conf.strength
strength = 0.1

[Potential1D]
type = PotentialType.Static
storage_model = StaticStorageModel.StorageValue
function = GetDiagonalElements
filename = 'input/matrixelements_complex.h5'
dataset = '/Energies'
scaling = 1.0
size = 50

[Propagation]
base_propagator = VectorPropagator
propagator = OdePropagator
potential_evaluation = ["Potential1D","ElectricControlX", "ElectricControlY"]
timestep = 0.25
duration = 500.0
renormalization = False
silent = True
absolute_error = 1.0e-10
relative_error = 1.0e-10

[Distribution]
proc_array_rank = 1
initial_distribution = array([0])
