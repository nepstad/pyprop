#declare potential evaluator for cartesian-like potentials
PotentialEvaluator = Template("DynamicPotentialEvaluator", "potential.cpp")

#Compile potential for 1D and 2D
PotentialEvaluator("KineticEnergyPotential<1> 1","KineticEnergyPotential_1")
PotentialEvaluator("KineticEnergyPotential<2> 2","KineticEnergyPotential_2")
PotentialEvaluator("KineticEnergyPotential<3> 3","KineticEnergyPotential_3")

PotentialEvaluator("DipoleLaserPotential<1> 1","DipoleLaserPotential_1")
PotentialEvaluator("DipoleLaserPotential<2> 2","DipoleLaserPotential_2")

PotentialEvaluator("AngularKineticEnergyPotential<2> 2","AngularKineticEnergyPotential_2")

PotentialEvaluator("RadialHarmonicPotential<1> 1","RadialHarmonicPotential_1")
PotentialEvaluator("RadialHarmonicPotential<2> 2","RadialHarmonicPotential_2")
PotentialEvaluator("RadialCoulombPotential<1> 1","RadialCoulombPotential_1")
PotentialEvaluator("RadialCoulombPotential<2> 2","RadialCoulombPotential_2")

module_code('def("RepresentPotentialInBasisBSpline", RepresentPotentialInBasisBSpline<cplx, 1>);\n')
module_code('def("RepresentPotentialInBasisBSpline", RepresentPotentialInBasisBSpline<cplx, 2>);\n')
module_code('def("RepresentPotentialInBasisBSpline", RepresentPotentialInBasisBSpline<cplx, 3>);\n')

module_code('def("RepresentPotentialInBasisReducedSphericalHarmonic", RepresentPotentialInBasisReducedSphericalHarmonic<cplx, 1>);\n')
module_code('def("RepresentPotentialInBasisReducedSphericalHarmonic", RepresentPotentialInBasisReducedSphericalHarmonic<cplx, 2>);\n')
module_code('def("RepresentPotentialInBasisReducedSphericalHarmonic", RepresentPotentialInBasisReducedSphericalHarmonic<cplx, 3>);\n')

module_code('def("MultiplyTensorPotential_1", MultiplyTensorPotential_1<cplx>);\n')
module_code('def("MultiplyTensorPotential_2", MultiplyTensorPotential_2<cplx>);\n')


#declaration_code('#include "parallel_multiply_wrapper.cpp"')
#module_code('def("BandedMatrixMultiply_Wrapper", BandedMatrixMultiply_Wrapper);')

module_code('def("VectorDotProduct", VectorDotProduct<1>);')
module_code('def("VectorDotProduct", VectorDotProduct<2>);')
module_code('def("VectorDotProduct", VectorDotProduct<3>);')


