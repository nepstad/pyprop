[Import]
files = ["../sphericalbase.ini"]

[Representation]
rank = 3
type = core.SphericalRepresentation_3
representation0 = "NuclearRepresentation"
representation1 = "RadialRepresentation"
representation2 = "AngularRepresentation"

[NuclearRepresentation]
#This section is replaced by either of the two
#radial representations below by a call to
#SetNuclearRepresentationType()

[CartesianNuclearRepresentation]
type = core.CartesianRepresentation_1
rank = 1
rank0 = [-25, 25, 128]

[TransformedNuclearRepresentation]
type = core.TransformedRadialRepresentation
rank = 1
n = 40
transform_type = 1
transform_scaling = 1.

[RadialRepresentation]
#This section is replaced by either of the two
#radial representations below by a call to
#SetRadialRepresentationType()

[CartesianRadialRepresentation]
type = core.CartesianRepresentation_1
rank = 1
rank0 = [-25, 25, 128]

[TransformedRadialRepresentation]
type = core.TransformedRadialRepresentation
rank = 1
n = 40
transform_type = 1
transform_scaling = 1.

[AngularRepresentation]
maxl = 8

[InitialCondition]
type = InitialConditionType.Function
function = lambda conf, x: x[1] * exp(- abs(x[1]))

[Potential]
type = PotentialType.Static
classname = "H2pPotential"
charge = -1
softing = 0.01
nuclear_orientation = 0

[Propagation]
potential_evaluation = ["Potential"] 
timestep = -0.01j
duration = 5
renormalization = True
mass = 1.0
silent = True
propagator0 = "NuclearPropagator"
propagator1 = "RadialPropagator"
propagator2 = "AngularPropagator"

[NuclearPropagator]
propagator = TransformedRadialPropagator
mass = 800.

[RadialPropagator]
propagator = TransformedRadialPropagator
mass = 1.0

[AngularPropagator]
propagator = FullSphericalPropagator
mass = 1.0
radial_rank = 1
